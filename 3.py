# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestDefaultSuite():
    def setup_method(self, method):
        self.driver = webdriver.Chrome()
        self.vars = {}

    def teardown_method(self, method):
        self.driver.quit()

    def test_archiveprod(self):
        # Test name: archive_prod
        # Step # | name | target | value | comment
        # 1 | open | /web/login |  |
        self.driver.get("https://organicafoods.odoo.com/web/login")
        # 2 | setWindowSize | 1358x714 |  |
        self.driver.set_window_size(1358, 714)
        # 3 | type | id=login | gm070797@gmail.com |
        self.driver.find_element(
            By.ID, "login").send_keys("gm070797@gmail.com")
        # 4 | click | id=password |  |
        self.driver.find_element(By.ID, "password").click()
        # 5 | type | id=password | Organicafoods |
        self.driver.find_element(By.ID, "password").send_keys("Organicafoods")
        # 6 | click | css=.btn |  |
        self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
        # 7 | click | css=.o_app:nth-child(2) > .o_app_icon |  |
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, ".o_app:nth-child(2) > .o_app_icon")))
        self.driver.find_element(
            By.CSS_SELECTOR, ".o_app:nth-child(2) > .o_app_icon").click()
        # 8 | click | linkText=Products |  |
        WebDriverWait(self.driver, 10).until(
            expected_conditions.presence_of_element_located((By.LINK_TEXT, "Products")))
        self.driver.find_element(By.LINK_TEXT, "Products").click()
        # 9 | click | css=.show > .dropdown-item |  |
        self.driver.find_element(
            By.CSS_SELECTOR, ".show > .dropdown-item").click()
        # 10 | click | css=.oe_kanban_global_click:nth-child(1) > .oe_kanban_details |  |
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, ".oe_kanban_global_click:nth-child(1) > .oe_kanban_details")))
        self.driver.find_element(
            By.CSS_SELECTOR, ".oe_kanban_global_click:nth-child(1) > .oe_kanban_details").click()
        # 11 | click | css=.btn-group:nth-child(2) > .o_dropdown_toggler_btn |  |
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.XPATH, "//aside/div/div[2]/button")))
        element = self.driver.find_element(
            By.XPATH, "//aside/div/div[2]/button")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click().perform()
        # 12 | click | linkText=Archive |  |
        WebDriverWait(self.driver, 10).until(
            expected_conditions.presence_of_element_located((By.LINK_TEXT, "Archive")))
        self.driver.find_element(By.LINK_TEXT, "Archive").click()
        # 13 | click | css=.btn-primary > span |  |
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, ".btn-primary > span")))
        self.driver.find_element(
            By.CSS_SELECTOR, ".btn-primary > span").click()

    def test_addanewproduct(self):
        # Test name: add a new product
        # Step # | name | target | value | comment
        # 1 | open | /web |  |
        self.driver.get("https://organicafoods.odoo.com/web")
        # 2 | setWindowSize | 1358x714 |  |
        self.driver.set_window_size(1358, 714)
        # 3 | type | id=login | gm070797@gmail.com |
        self.driver.find_element(
            By.ID, "login").send_keys("gm070797@gmail.com")
        # # 4 | click | id=password |  |
        self.driver.find_element(By.ID, "password").click()
        # # 5 | type | id=password | Organicafoods |
        self.driver.find_element(By.ID, "password").send_keys("Organicafoods")
        # # 6 | click | css=.btn |  |
        self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
        # 3 | click | css=.o_app:nth-child(2) > .o_app_icon |  |
        WebDriverWait(self.driver, 50).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, ".o_app:nth-child(2) > .o_app_icon")))
        self.driver.find_element(
            By.CSS_SELECTOR, ".o_app:nth-child(2) > .o_app_icon").click()
        # 4 | click | linkText=Products |  |
        WebDriverWait(self.driver, 10).until(
            expected_conditions.presence_of_element_located((By.LINK_TEXT, "Products")))
        self.driver.find_element(By.LINK_TEXT, "Products").click()
        # 5 | click | css=.show > .dropdown-item |  |
        self.driver.find_element(
            By.CSS_SELECTOR, ".show > .dropdown-item").click()
        # 6 | click | css=.o-kanban-button-new |  |
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, ".o-kanban-button-new")))
        self.driver.find_element(
            By.CSS_SELECTOR, ".o-kanban-button-new").click()
        # 7 | click | id=o_field_input_159 |  |
        #self.driver.find_element(By.ID, "o_field_input_159").click()
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, "input.o_field_char.o_field_widget.o_input.o_field_translate.o_required_modifier")))
        self.driver.find_element(
            By.CSS_SELECTOR, "input.o_field_char.o_field_widget.o_input.o_field_translate.o_required_modifier").click()
        # 8 | type | id=o_field_input_159 | myproduct |
        self.driver.find_element(
            By.CSS_SELECTOR, "input.o_field_char.o_field_widget.o_input.o_field_translate.o_required_modifier").send_keys("myproduct")
        # 9 | click | css=#notebook_page_162 > .o_group > .o_group:nth-child(1) tr:nth-child(2) > td:nth-child(2) |  |
        # self.driver.find_element(By.CSS_SELECTOR, "#notebook_page_162 > .o_group > .o_group:nth-child(1) tr:nth-child(2) > td:nth-child(2)").click()
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, "input.o_input.o_field_widget.o_required_modifier")))
        # 10 | click | id=o_field_input_164 |  |
        dropdown = self.driver.find_element(
            By.CSS_SELECTOR, "input.o_input.o_field_widget.o_required_modifier")
        # 11 | select | id=o_field_input_164 | label=Storable Product |
        #dropdown = self.driver.find_element(By.ID, "o_field_input_164")

        dropdown.find_element(
            By.XPATH, "//option[. = 'Storable Product']").click()
        # 12 | click | id=o_field_input_164 |  |
        self.driver.find_element(
            By.CSS_SELECTOR, "input.o_input.o_field_widget.o_required_modifier").click()
        # 13 | mouseDownAt | css=.o_content | 1337,157 |
        element = self.driver.find_element(By.CSS_SELECTOR, ".o_content")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click_and_hold().perform()
        # 14 | mouseMoveAt | css=.o_content | 1337,157 |
        element = self.driver.find_element(By.CSS_SELECTOR, ".o_content")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).perform()
        # 15 | mouseUpAt | css=.o_content | 1337,157 |
        element = self.driver.find_element(By.CSS_SELECTOR, ".o_content")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).release().perform()
        # 16 | click | css=.o_form_button_save |  |
        self.driver.find_element(
            By.CSS_SELECTOR, ".o_form_button_save").click()
        # 17 | mouseOver | css=.o_form_button_edit |  |
        #element = self.driver.find_element(By.CSS_SELECTOR, ".o_form_button_edit")
        #actions = ActionChains(self.driver)
        # actions.move_to_element(element).perform()
        # 18 | mouseOut | css=.o_form_button_edit |  |
        #element = self.driver.find_element(By.CSS_SELECTOR, "body")
        #actions = ActionChains(self.driver)
        #actions.move_to_element(element, 0, 0).perform()

    def test_duplicateaproduct(self):
        # test name: duplicate a product
        # step # | name | target | value | comment
     # 1 | open | /web |  |
        self.driver.get("https://organicafoods.odoo.com/web")
     # 2 | setwindowsize | 1358x714 |  |
        self.driver.set_window_size(1358, 714)
        # 3 | type | id=login | gm070797@gmail.com |
        self.driver.find_element(
            By.ID, "login").send_keys("gm070797@gmail.com")
        # 4 | click | id=password |  |
        self.driver.find_element(By.ID, "password").click()
        # 5 | type | id=password | Organicafoods |
        self.driver.find_element(By.ID, "password").send_keys("Organicafoods")
        # 6 | click | css=.btn |  |
        self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
        # 3 | click | css=.o_app:nth-child(2) > .o_app_icon |  |
        WebDriverWait(self.driver, 50).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, ".o_app:nth-child(2) > .o_app_icon")))
        self.driver.find_element(
            By.CSS_SELECTOR, ".o_app:nth-child(2) > .o_app_icon").click()
     # 4 | click | linktext=products |  |
        WebDriverWait(self.driver, 10).until(
            expected_conditions.presence_of_element_located((By.LINK_TEXT, "Products")))
        self.driver.find_element(By.LINK_TEXT, "Products").click()
        # 5 | click | css=.show span |  |
        self.driver.find_element(By.CSS_SELECTOR, ".show span").click()
        # 6 | click | css=.oe_kanban_global_click:nth-child(14) .o_field_monetary |  |
        WebDriverWait(self.driver, 50).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, ".oe_kanban_global_click:nth-child(14) .o_field_monetary")))
        self.driver.find_element(
            By.CSS_SELECTOR, ".oe_kanban_global_click:nth-child(14) .o_field_monetary").click()
        # 7 | click | css=.btn-group:nth-child(2) > .o_dropdown_toggler_btn |  |
        WebDriverWait(self.driver, 50).until(expected_conditions.presence_of_element_located(
            (By.XPATH, "//aside/div/div[2]/button")))
        self.driver.find_element(By.XPATH, "//aside/div/div[2]/button").click()
        # 8 | click | linktext=duplicate |  |
        WebDriverWait(self.driver, 10).until(
            expected_conditions.presence_of_element_located((By.LINK_TEXT, "Duplicate")))
        self.driver.find_element(By.LINK_TEXT, "Duplicate").click()
        # 9 | click | css=.o_form_button_save |  |
        WebDriverWait(self.driver, 10).until(expected_conditions.element_to_be_clickable(
            (By.CSS_SELECTOR, ".o_form_button_save")))
        self.driver.find_element(
            By.CSS_SELECTOR, ".o_form_button_save").click()

    def test_deleteaproduct(self):
        # Test name: delete a product
        # Step # | name | target | value | comment
        # 1 | open | /web |  |
        self.driver.get("https://organicafoods.odoo.com/web")
        # 2 | setWindowSize | 1358x714 |  |
        self.driver.set_window_size(1358, 714)
        # 3 | type | id=login | gm070797@gmail.com |
        self.driver.find_element(
            By.ID, "login").send_keys("gm070797@gmail.com")
        # # 4 | click | id=password |  |
        self.driver.find_element(By.ID, "password").click()
        # # 5 | type | id=password | Organicafoods |
        self.driver.find_element(By.ID, "password").send_keys("Organicafoods")
        # # 6 | click | css=.btn |  |
        self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
        # 3 | click | css=.o_app:nth-child(2) > .o_app_icon |  |
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, ".o_app:nth-child(2) > .o_app_icon")))
        self.driver.find_element(
            By.CSS_SELECTOR, ".o_app:nth-child(2) > .o_app_icon").click()
        # 4 | click | linkText=Products |  |
        WebDriverWait(self.driver, 10).until(
            expected_conditions.presence_of_element_located((By.LINK_TEXT, "Products")))
        self.driver.find_element(By.LINK_TEXT, "Products").click()
        # 5 | click | css=.show span |  |
        self.driver.find_element(By.CSS_SELECTOR, ".show span").click()
        # 6 | type | css=.o_searchview_input | Laptop Char |
        self.driver.find_element(
            By.CSS_SELECTOR, ".o_searchview_input").send_keys("Laptop Char")
        # 7 | click | css=.o_cp_left |  |
        self.driver.find_element(By.CSS_SELECTOR, ".o_cp_left").click()
        # 8 | click | css=.oe_kanban_global_click:nth-child(10) |  |
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, ".oe_kanban_global_click:nth-child(10)")))
        element = self.driver.find_element(
            By.CSS_SELECTOR, ".oe_kanban_global_click:nth-child(10)")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click().perform()
        # 9 | click | css=.btn-group:nth-child(2) > .o_dropdown_toggler_btn |  |
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.XPATH, "//aside/div/div[2]/button")))
        element = self.driver.find_element(
            By.XPATH, "//aside/div/div[2]/button")
        actions = ActionChains(self.driver)
        actions.move_to_element(element).click().perform()
        # 10 | click | linkText=Delete |  |
        WebDriverWait(self.driver, 10).until(
            expected_conditions.presence_of_element_located((By.LINK_TEXT, "Delete")))
        self.driver.find_element(By.LINK_TEXT, "Delete").click()
        # 11 | click | css=.btn-primary > span |  |
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, ".btn-primary > span")))
        self.driver.find_element(
            By.CSS_SELECTOR, ".btn-primary > span").click()
        # 12 | click | css=.modal-footer > .btn |  |
        self.driver.find_element(
            By.CSS_SELECTOR, ".modal-footer > .btn").click()

    def test_searchaproduct(self):
        # Test name: search a product
        # Step # | name | target | value | comment
        # 1 | open | /web |  |
        self.driver.get("https://organicafoods.odoo.com/web")
        # 2 | setWindowSize | 1358x714 |  |
        self.driver.set_window_size(1358, 714)
        # self.driver.set_window_size(1358, 714)
        # # 3 | type | id=login | gm070797@gmail.com |
        self.driver.find_element(
            By.ID, "login").send_keys("gm070797@gmail.com")
        # # # 4 | click | id=password |  |
        self.driver.find_element(By.ID, "password").click()
        # # # 5 | type | id=password | Organicafoods |
        self.driver.find_element(By.ID, "password").send_keys("Organicafoods")
        # # # 6 | click | css=.btn |  |
        self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
        # 3 | click | css=.o_app:nth-child(2) > .o_app_icon |  |
        WebDriverWait(self.driver, 10).until(expected_conditions.presence_of_element_located(
            (By.CSS_SELECTOR, ".o_app:nth-child(2) > .o_app_icon")))
        self.driver.find_element(
            By.CSS_SELECTOR, ".o_app:nth-child(2) > .o_app_icon").click()
        # 4 | click | linkText=Products |  |
        WebDriverWait(self.driver, 10).until(
            expected_conditions.presence_of_element_located((By.LINK_TEXT, "Products")))
        self.driver.find_element(By.LINK_TEXT, "Products").click()
        # 5 | click | css=.show span |  |
        self.driver.find_element(By.CSS_SELECTOR, ".show span").click()
        # 6 | type | css=.o_searchview_input | myproduct |
        self.driver.find_element(
            By.CSS_SELECTOR, ".o_searchview_input").send_keys("myproduct")
        # 7 | sendKeys | css=.o_searchview_input | ${KEY_ENTER} |
        self.driver.find_element(
            By.CSS_SELECTOR, ".o_searchview_input").send_keys(Keys.ENTER)
